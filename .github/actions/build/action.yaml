---
name: "Build"
description: "Builds a flake output and pushes the build output(s) to Cachix"
inputs:
  github-token:
    description: "The GitHub token"
    required: false
    type: string
  cachix-cache-name:
    description: "The name of the Cachix binary cache"
    required: false
    type: string
    default: "dixslyf"
  cachix-auth-token:
    description: "The authentication token for Cachix"
    required: true
    type: string
  derivation:
    description: "The derivation to build"
    required: true
    type: string
  cachix-extra-pull-names:
    description: "Comma-separated list of names for extra cachix caches to pull/substitute"
    required: false
    type: string
  additional-flags:
    description: "Add additional flags (whitespace-separated) to the build command"
    required: false
    type: string

runs:
  using: composite
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: "arm64"
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ inputs.github-token }}
        extra_nix_config: |
          # `i686-linux` must be present for 32-bit software
          # More context: https://github.com/NixOS/nixpkgs/issues/86506#issuecomment-623746883
          extra-platforms = i686-linux aarch64-linux
    - uses: cachix/cachix-action@v15
      with:
        name: ${{ inputs.cachix-cache-name }}
        authToken: ${{ inputs.cachix-auth-token }}
        extraPullNames: ${{ inputs.cachix-extra-pull-names }}
    - name: Build
      shell: bash
      env:
        NIXPKGS_ALLOW_UNFREE: 1
      run: nix build --print-build-logs --impure ${{ inputs.additional-flags }} ${{ inputs.derivation }}
    - name: Cachix push `./result`
      shell: bash
      run: cachix push ${{ inputs.cachix-cache-name }} ./result
